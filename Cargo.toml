[package]
name = "static_init"
version = "0.5.2"
authors = ["Olivier Kannengieser <okannen@gmail.com>"]
edition = "2018"
description = "Code execution during program initialization/termination phases and non const static initialization (and drop)"
keywords = ["no_std","optimization","static","preformance","constructor"]
categories = ["no-std","rust-patterns","memory-management"]
repository = "https://gitlab.com/okannen/static_init"
license = "MIT OR Apache-2.0"

[workspace]
members = [
      "static_init_macro",
      ]

[features]

likely = ["likely_stable"]

# for detection of lazy static cyclic initialization 
# and detection of dynamic statics access while not initialized
debug_order = ["static_init_macro/debug_order","parking_lot"]

thread_local = []

# internal feature to enable tests
test_no_global_lazy_hint = []


default = ["likely_stable"]

[dependencies]
likely_stable = {version = "0.1", optional=true}
bitflags = "1"
parking_lot = {version = "0.11", optional=true}

[dependencies.static_init_macro]
version="0.5.0"
path="static_init_macro"

[dev-dependencies]
lazy_static = "1.4"
ctor = "0.1"
libc = "0.2"
parking_lot = "0.11"

[build-dependencies]
cfg_aliases = "0.1"

[profile.bench]
lto = true

[profile.dev]
panic="abort"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[target.'cfg(target_os="windows")'.dependencies.winapi]
version = "0.3"
features = ["minwindef", "winnt", "winbase","synchapi"]

[target.'cfg(target_os="linux")'.dependencies.libc]
version = "0.2"
default-features = false

[target.'cfg(target_os="android")'.dependencies.libc]
version = "0.2"
default-features = false

[target.'cfg(not(any(target_os="linux",target_os="windows",target_os="android")))'.dependencies]
parking_lot = "0.11"
parking_lot_core = "0.8"
